{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeColors = {\n  manly: {\n    light: '#BCAAA4',\n    dark: '#3E2723'\n  },\n  classic: {\n    light: '#f0d9b5',\n    dark: '#b58863'\n  },\n  blue: {\n    light: '#e0eaff',\n    dark: '#3a5ca8'\n  },\n  green: {\n    light: '#eaffea',\n    dark: '#3a8a3a'\n  },\n  wood: {\n    light: '#ecdab9',\n    dark: '#b88762'\n  }\n};\nconst ChessboardComponent = ({\n  fen,\n  moves,\n  onMove,\n  playerColor,\n  turn,\n  soloMode,\n  boardOrientation,\n  boardTheme = 'manly'\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState(null);\n  const [boardWidth, setBoardWidth] = useState(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState(null);\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove = null;\n    moves.forEach(move => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({\n        from: lastMove.from,\n        to: lastMove.to\n      });\n    }\n  }, [moves]);\n  const handlePieceDrop = (sourceSquare, targetSquare) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) return false;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    });\n    if (move) {\n      setMoveError(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({\n        from: move.from,\n        to: move.to\n      });\n      return true;\n    } else {\n      setMoveError('Illegal move!');\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares ? {\n    [lastMoveSquares.from]: {\n      background: '#FFD700',\n      boxShadow: '0 0 10px 2px #FFD700'\n    },\n    [lastMoveSquares.to]: {\n      background: '#B22222',\n      boxShadow: '0 0 10px 2px #B22222'\n    }\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [moveError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        fontWeight: 'bold',\n        marginBottom: 8\n      },\n      children: moveError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this), playerColor && playerColor !== turn && !soloMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        marginBottom: 8,\n        fontWeight: 'bold'\n      },\n      children: \"Waiting for opponent's move...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: handlePieceDrop,\n      boardWidth: boardWidth,\n      boardOrientation: boardOrientation || (playerColor === 'b' ? 'black' : 'white'),\n      customBoardStyle: {\n        borderRadius: '8px',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.6)'\n      },\n      customDarkSquareStyle: {\n        backgroundColor: boardColors.dark\n      },\n      customLightSquareStyle: {\n        backgroundColor: boardColors.light\n      },\n      customSquareStyles: customSquareStyles,\n      arePiecesDraggable: !!soloMode || !!playerColor && playerColor === turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"6cfBBR5UC77lt3m8GK8EnUD7TsI=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","jsxDEV","_jsxDEV","themeColors","manly","light","dark","classic","blue","green","wood","ChessboardComponent","fen","moves","onMove","playerColor","turn","soloMode","boardOrientation","boardTheme","_s","game","setGame","lastMoveSquares","setLastMoveSquares","boardWidth","setBoardWidth","Math","min","window","innerWidth","moveError","setMoveError","handleResize","addEventListener","removeEventListener","newGame","load","lastMove","forEach","move","err","console","warn","from","to","handlePieceDrop","sourceSquare","targetSquare","promotion","san","boardColors","customSquareStyles","background","boxShadow","className","children","style","color","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","customBoardStyle","borderRadius","customDarkSquareStyle","backgroundColor","customLightSquareStyle","arePiecesDraggable","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/Chessboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\n\ninterface Props {\n  fen: string | null;\n  moves: string[];\n  onMove: (move: string) => void;\n  playerColor: 'w' | 'b' | null;\n  turn: 'w' | 'b';\n  soloMode?: boolean;\n  boardOrientation?: 'white' | 'black';\n  boardTheme?: 'manly' | 'classic' | 'blue' | 'green' | 'wood';\n}\n\nconst themeColors = {\n  manly: { light: '#BCAAA4', dark: '#3E2723' },\n  classic: { light: '#f0d9b5', dark: '#b58863' },\n  blue: { light: '#e0eaff', dark: '#3a5ca8' },\n  green: { light: '#eaffea', dark: '#3a8a3a' },\n  wood: { light: '#ecdab9', dark: '#b88762' },\n};\n\nconst ChessboardComponent: React.FC<Props> = ({ fen, moves, onMove, playerColor, turn, soloMode, boardOrientation, boardTheme = 'manly' }) => {\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState<{from: string, to: string} | null>(null);\n  const [boardWidth, setBoardWidth] = useState<number>(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove: any = null;\n    moves.forEach((move) => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({ from: lastMove.from, to: lastMove.to });\n    }\n  }, [moves]);\n\n  const handlePieceDrop = (sourceSquare: string, targetSquare: string) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) return false;\n    const move = game.move({ from: sourceSquare, to: targetSquare, promotion: 'q' });\n    if (move) {\n      setMoveError(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({ from: move.from, to: move.to });\n      return true;\n    } else {\n      setMoveError('Illegal move!');\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares\n    ? {\n        [lastMoveSquares.from]: {\n          background: '#FFD700',\n          boxShadow: '0 0 10px 2px #FFD700',\n        },\n        [lastMoveSquares.to]: {\n          background: '#B22222',\n          boxShadow: '0 0 10px 2px #B22222',\n        },\n      }\n    : {};\n\n  return (\n    <div className=\"chessboard-container\">\n      {moveError && <div style={{ color: 'red', fontWeight: 'bold', marginBottom: 8 }}>{moveError}</div>}\n      {playerColor && playerColor !== turn && !soloMode && (\n        <div style={{ color: '#FFD700', marginBottom: 8, fontWeight: 'bold' }}>\n          Waiting for opponent's move...\n        </div>\n      )}\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={handlePieceDrop}\n        boardWidth={boardWidth}\n        boardOrientation={boardOrientation || (playerColor === 'b' ? 'black' : 'white')}\n        customBoardStyle={{\n          borderRadius: '8px',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.6)',\n        }}\n        customDarkSquareStyle={{ backgroundColor: boardColors.dark }}\n        customLightSquareStyle={{ backgroundColor: boardColors.light }}\n        customSquareStyles={customSquareStyles}\n        arePiecesDraggable={!!soloMode || (!!playerColor && playerColor === turn)}\n      />\n    </div>\n  );\n};\n\nexport default ChessboardComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}