{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst themeColors = {\n  manly: {\n    light: '#BCAAA4',\n    dark: '#3E2723'\n  },\n  classic: {\n    light: '#f0d9b5',\n    dark: '#b58863'\n  },\n  blue: {\n    light: '#e0eaff',\n    dark: '#3a5ca8'\n  },\n  green: {\n    light: '#eaffea',\n    dark: '#3a8a3a'\n  },\n  wood: {\n    light: '#ecdab9',\n    dark: '#b88762'\n  }\n};\nconst ChessboardComponent = ({\n  fen,\n  moves,\n  onMove,\n  playerColor,\n  turn,\n  soloMode,\n  boardOrientation,\n  boardTheme = 'manly',\n  aiMode,\n  onUndoAiMove\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState(null);\n  const [boardWidth, setBoardWidth] = useState(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [prevFen, setPrevFen] = useState('start');\n  const [mpMessage, setMpMessage] = useState(null);\n  const [drawOffer, setDrawOffer] = useState(null);\n  const [gameOver, setGameOver] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [hintSquares, setHintSquares] = useState([]);\n  const socket = io('http://localhost:4000');\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove = null;\n    moves.forEach(move => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({\n        from: lastMove.from,\n        to: lastMove.to\n      });\n    }\n  }, [moves]);\n  useEffect(() => {\n    socket.off('drawOffered');\n    socket.off('drawDeclined');\n    socket.off('gameOver');\n    socket.on('drawOffered', data => {\n      setDrawOffer(data);\n      setMpMessage('Opponent offered a draw.');\n    });\n    socket.on('drawDeclined', () => {\n      setMpMessage('Opponent declined your draw offer.');\n      setDrawOffer(null);\n    });\n    socket.on('gameOver', data => {\n      if (data.reason === 'resign') {\n        setGameOver(data.loser === socket.id ? 'You resigned. Game over.' : 'Opponent resigned. You win!');\n      } else if (data.reason === 'draw') {\n        setGameOver('Game drawn by agreement.');\n      }\n      setDrawOffer(null);\n    });\n    return () => {\n      socket.off('drawOffered');\n      socket.off('drawDeclined');\n      socket.off('gameOver');\n    };\n  }, []);\n  const handlePieceDrop = (sourceSquare, targetSquare) => {\n    let debug = '';\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) {\n      setMoveError(\"It's not your turn.\");\n      setGame(new Chess(prevFen));\n      setDebugInfo('Not your turn.');\n      return false;\n    }\n    const moveObj = {\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    };\n    const legalMoves = game.moves({\n      verbose: true\n    });\n    const isLegal = legalMoves.some(m => m.from === sourceSquare && m.to === targetSquare);\n    setPrevFen(game.fen());\n    let move = null;\n    try {\n      move = game.move(moveObj);\n    } catch (err) {\n      debug = `Exception: ${(err === null || err === void 0 ? void 0 : err.message) || err}`;\n      setMoveError('Invalid move: ' + ((err === null || err === void 0 ? void 0 : err.message) || 'Unknown error.'));\n      setGame(new Chess(prevFen));\n      setDebugInfo(`Move: ${JSON.stringify(moveObj)}\\nLegal moves: ${JSON.stringify(legalMoves)}\\n${debug}`);\n      console.log('DEBUG: Move failed', {\n        moveObj,\n        legalMoves,\n        error: err\n      });\n      return false;\n    }\n    if (move) {\n      setMoveError(null);\n      setDebugInfo(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({\n        from: move.from,\n        to: move.to\n      });\n      return true;\n    } else {\n      // Advanced rule feedback\n      const fromPiece = game.get(sourceSquare);\n      if (!fromPiece) {\n        setMoveError('No piece on that square.');\n        debug = 'No piece on that square.';\n      } else if (fromPiece.color !== game.turn()) {\n        setMoveError(\"You can't move your opponent's piece.\");\n        debug = 'Tried to move opponent piece.';\n      } else if (!isLegal) {\n        const canMove = legalMoves.some(m => m.from === sourceSquare);\n        if (!canMove) {\n          setMoveError('This piece cannot move right now (it may be blocked or pinned).');\n          debug = 'Piece cannot move (blocked or pinned).';\n        } else {\n          if (['b', 'r', 'q'].includes(fromPiece.type)) {\n            setMoveError('That move is blocked by another piece.');\n            debug = 'Path blocked.';\n          } else {\n            setMoveError('That move is not legal for this piece.');\n            debug = 'Move not legal for this piece.';\n          }\n        }\n      } else {\n        var _legalMoves$find;\n        const moveStr = ((_legalMoves$find = legalMoves.find(m => m.from === sourceSquare && m.to === targetSquare)) === null || _legalMoves$find === void 0 ? void 0 : _legalMoves$find.san) || '';\n        if (moveStr.includes('O-O')) {\n          setMoveError('You cannot castle through, into, or out of check.');\n          debug = 'Castling through/into check.';\n        } else if (sourceSquare[1] === '7' && fromPiece && fromPiece.type === 'p' && targetSquare[1] === '8' && !moveObj.promotion) {\n          setMoveError('You must promote your pawn when it reaches the last rank.');\n          debug = 'Pawn promotion required.';\n        } else {\n          const clone = new Chess(game.fen());\n          try {\n            const result = clone.move(moveObj);\n            if (result && clone.inCheck()) {\n              setMoveError('You cannot move this piece because it would leave your king in check (pinned piece or discovered check).');\n              debug = 'Move would leave king in check.';\n            } else {\n              setMoveError('Illegal move!');\n              debug = 'Unknown illegal move.';\n            }\n          } catch (err) {\n            setMoveError('Illegal move!');\n            debug = `Exception: ${(err === null || err === void 0 ? void 0 : err.message) || err}`;\n          }\n        }\n      }\n      setGame(new Chess(prevFen));\n      setDebugInfo(`Move: ${JSON.stringify(moveObj)}\\nLegal moves: ${JSON.stringify(legalMoves)}\\n${debug}`);\n      console.log('DEBUG: Move failed', {\n        moveObj,\n        legalMoves,\n        debug\n      });\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Move hint logic\n  const handleSquareClick = square => {\n    // Find all legal moves from this square\n    const legalMoves = game.moves({\n      verbose: true\n    });\n    const hints = legalMoves.filter(m => m.from === square).map(m => m.to);\n    setHintSquares(hints);\n  };\n  const handleBoardClick = () => {\n    setHintSquares([]);\n  };\n\n  // Merge move hints with last move highlights\n  const customSquareStyles = {\n    ...(lastMoveSquares ? {\n      [lastMoveSquares.from]: {\n        background: '#FFD700',\n        boxShadow: '0 0 10px 2px #FFD700'\n      },\n      [lastMoveSquares.to]: {\n        background: '#B22222',\n        boxShadow: '0 0 10px 2px #B22222'\n      }\n    } : {}),\n    ...hintSquares.reduce((acc, sq) => {\n      acc[sq] = {\n        background: 'radial-gradient(circle, #FFD700 60%, #BCAAA4 100%)',\n        boxShadow: '0 0 8px 2px #FFD700'\n      };\n      return acc;\n    }, {})\n  };\n\n  // Undo move handler for solo/AI mode\n  const handleUndo = () => {\n    if (aiMode && onUndoAiMove) {\n      onUndoAiMove();\n      return;\n    }\n    if (!soloMode) return;\n    if (moves.length === 0) return;\n    const newMoves = moves.slice(0, -1);\n    const chess = new Chess();\n    newMoves.forEach(move => {\n      try {\n        chess.move(move);\n      } catch {}\n    });\n    setGame(chess);\n    setLastMoveSquares(null);\n    setMoveError(null);\n  };\n  const handleResign = () => {\n    socket.emit('resign', window.location.pathname.replace('/', '') || 'room1');\n  };\n  const handleOfferDraw = () => {\n    socket.emit('offerDraw', window.location.pathname.replace('/', '') || 'room1');\n    setMpMessage('Draw offer sent.');\n  };\n  const handleDrawResponse = accepted => {\n    socket.emit('drawResponse', {\n      gameId: window.location.pathname.replace('/', '') || 'room1',\n      accepted\n    });\n    setDrawOffer(null);\n    setMpMessage(accepted ? 'Draw accepted.' : 'Draw declined.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: handlePieceDrop,\n      boardWidth: boardWidth,\n      boardOrientation: boardOrientation || (playerColor === 'b' ? 'black' : 'white'),\n      customBoardStyle: {\n        borderRadius: '8px',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.6)'\n      },\n      customDarkSquareStyle: {\n        backgroundColor: boardColors.dark\n      },\n      customLightSquareStyle: {\n        backgroundColor: boardColors.light\n      },\n      customSquareStyles: customSquareStyles,\n      arePiecesDraggable: !!soloMode || !!playerColor && playerColor === turn,\n      onSquareClick: handleSquareClick,\n      onMouseOutSquare: handleBoardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 8,\n        marginLeft: 'auto',\n        marginTop: 12\n      },\n      children: [(soloMode || aiMode) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        disabled: moves.length === 0,\n        style: {\n          background: '#BCAAA4',\n          color: '#222',\n          fontWeight: 'bold',\n          border: '2px solid #B22222',\n          borderRadius: 6,\n          padding: '6px 16px',\n          cursor: moves.length === 0 ? 'not-allowed' : 'pointer'\n        },\n        children: \"Undo Move\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), !soloMode && !aiMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResign,\n          style: {\n            background: '#B22222',\n            color: '#FFD700',\n            fontWeight: 'bold',\n            border: '2px solid #FFD700',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: 'pointer'\n          },\n          children: \"Resign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOfferDraw,\n          style: {\n            background: '#4682B4',\n            color: '#FFD700',\n            fontWeight: 'bold',\n            border: '2px solid #FFD700',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: 'pointer'\n          },\n          children: \"Offer Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowHelp(true),\n        style: {\n          background: '#FFD700',\n          color: '#222',\n          fontWeight: 'bold',\n          border: '2px solid #B22222',\n          borderRadius: 6,\n          padding: '6px 16px',\n          cursor: 'pointer'\n        },\n        children: \"Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), !soloMode && !aiMode && mpMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        fontWeight: 'bold',\n        marginTop: 8\n      },\n      children: mpMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), !soloMode && !aiMode && drawOffer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        fontWeight: 'bold',\n        marginTop: 8\n      },\n      children: [\"Opponent offered a draw. Accept?\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDrawResponse(true),\n        style: {\n          marginLeft: 8,\n          background: '#FFD700',\n          color: '#222',\n          fontWeight: 'bold',\n          border: '2px solid #B22222',\n          borderRadius: 6,\n          padding: '4px 12px',\n          cursor: 'pointer'\n        },\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDrawResponse(false),\n        style: {\n          marginLeft: 8,\n          background: '#B22222',\n          color: '#FFD700',\n          fontWeight: 'bold',\n          border: '2px solid #FFD700',\n          borderRadius: 6,\n          padding: '4px 12px',\n          cursor: 'pointer'\n        },\n        children: \"Decline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), !soloMode && !aiMode && gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        fontWeight: 'bold',\n        marginTop: 8\n      },\n      children: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), showHelp && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0,0,0,0.7)',\n        zIndex: 1000,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#222',\n          color: '#FFD700',\n          borderRadius: 12,\n          padding: 32,\n          maxWidth: 400,\n          textAlign: 'left',\n          boxShadow: '0 4px 24px #000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Chess Move Rules & Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            color: '#FFD700',\n            fontSize: '1em',\n            paddingLeft: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Only move your own pieces on your turn.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Pawns move forward, capture diagonally, and promote on the last rank.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Knights jump in an L-shape. Bishops move diagonally. Rooks move straight. Queens move any direction. Kings move one square.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"You cannot move into or through check. Pinned pieces cannot move if it exposes your king.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Castling is only allowed if neither the king nor rook has moved, the squares between are empty, and the king does not move through or into check.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"En passant is a special pawn capture after a two-square pawn move.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If you try an illegal move, the board will reset and you'll see an explanation here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(false),\n          style: {\n            marginTop: 16,\n            background: '#FFD700',\n            color: '#222',\n            fontWeight: 'bold',\n            border: '2px solid #B22222',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: 'pointer'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: '#FFD700',\n        background: '#222',\n        borderRadius: 8,\n        padding: 8,\n        marginTop: 8,\n        fontSize: '0.9em',\n        whiteSpace: 'pre-wrap'\n      },\n      children: debugInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"7IzXYVWfkbChubW13iFuWV+OoPA=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","io","jsxDEV","_jsxDEV","Fragment","_Fragment","themeColors","manly","light","dark","classic","blue","green","wood","ChessboardComponent","fen","moves","onMove","playerColor","turn","soloMode","boardOrientation","boardTheme","aiMode","onUndoAiMove","_s","game","setGame","lastMoveSquares","setLastMoveSquares","boardWidth","setBoardWidth","Math","min","window","innerWidth","moveError","setMoveError","showHelp","setShowHelp","prevFen","setPrevFen","mpMessage","setMpMessage","drawOffer","setDrawOffer","gameOver","setGameOver","debugInfo","setDebugInfo","hintSquares","setHintSquares","socket","handleResize","addEventListener","removeEventListener","newGame","load","lastMove","forEach","move","err","console","warn","from","to","off","on","data","reason","loser","id","handlePieceDrop","sourceSquare","targetSquare","debug","moveObj","promotion","legalMoves","verbose","isLegal","some","m","message","JSON","stringify","log","error","san","fromPiece","get","color","canMove","includes","type","_legalMoves$find","moveStr","find","clone","result","inCheck","boardColors","handleSquareClick","square","hints","filter","map","handleBoardClick","customSquareStyles","background","boxShadow","reduce","acc","sq","handleUndo","length","newMoves","slice","chess","handleResign","emit","location","pathname","replace","handleOfferDraw","handleDrawResponse","accepted","gameId","className","children","position","onPieceDrop","customBoardStyle","borderRadius","customDarkSquareStyle","backgroundColor","customLightSquareStyle","arePiecesDraggable","onSquareClick","onMouseOutSquare","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","marginLeft","marginTop","onClick","disabled","fontWeight","border","padding","cursor","top","left","width","height","zIndex","alignItems","justifyContent","maxWidth","textAlign","fontSize","paddingLeft","whiteSpace","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/Chessboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chess, Square } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\nimport io from 'socket.io-client';\n\ninterface Props {\n  fen: string | null;\n  moves: string[];\n  onMove: (move: string) => void;\n  playerColor: 'w' | 'b' | null;\n  turn: 'w' | 'b';\n  soloMode?: boolean;\n  boardOrientation?: 'white' | 'black';\n  boardTheme?: 'manly' | 'classic' | 'blue' | 'green' | 'wood';\n  aiMode?: boolean;\n  onUndoAiMove?: () => void;\n}\n\nconst themeColors = {\n  manly: { light: '#BCAAA4', dark: '#3E2723' },\n  classic: { light: '#f0d9b5', dark: '#b58863' },\n  blue: { light: '#e0eaff', dark: '#3a5ca8' },\n  green: { light: '#eaffea', dark: '#3a8a3a' },\n  wood: { light: '#ecdab9', dark: '#b88762' },\n};\n\nconst ChessboardComponent: React.FC<Props> = ({ fen, moves, onMove, playerColor, turn, soloMode, boardOrientation, boardTheme = 'manly', aiMode, onUndoAiMove }) => {\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState<{from: string, to: string} | null>(null);\n  const [boardWidth, setBoardWidth] = useState<number>(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState<string | null>(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [prevFen, setPrevFen] = useState<string>('start');\n  const [mpMessage, setMpMessage] = useState<string | null>(null);\n  const [drawOffer, setDrawOffer] = useState<{ from: string } | null>(null);\n  const [gameOver, setGameOver] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string | null>(null);\n  const [hintSquares, setHintSquares] = useState<string[]>([]);\n\n  const socket = io('http://localhost:4000');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove: any = null;\n    moves.forEach((move) => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({ from: lastMove.from, to: lastMove.to });\n    }\n  }, [moves]);\n\n  useEffect(() => {\n    socket.off('drawOffered');\n    socket.off('drawDeclined');\n    socket.off('gameOver');\n    socket.on('drawOffered', (data) => {\n      setDrawOffer(data);\n      setMpMessage('Opponent offered a draw.');\n    });\n    socket.on('drawDeclined', () => {\n      setMpMessage('Opponent declined your draw offer.');\n      setDrawOffer(null);\n    });\n    socket.on('gameOver', (data) => {\n      if (data.reason === 'resign') {\n        setGameOver(data.loser === socket.id ? 'You resigned. Game over.' : 'Opponent resigned. You win!');\n      } else if (data.reason === 'draw') {\n        setGameOver('Game drawn by agreement.');\n      }\n      setDrawOffer(null);\n    });\n    return () => {\n      socket.off('drawOffered');\n      socket.off('drawDeclined');\n      socket.off('gameOver');\n    };\n  }, []);\n\n  const handlePieceDrop = (sourceSquare: string, targetSquare: string) => {\n    let debug = '';\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) {\n      setMoveError(\"It's not your turn.\");\n      setGame(new Chess(prevFen));\n      setDebugInfo('Not your turn.');\n      return false;\n    }\n    const moveObj = { from: sourceSquare, to: targetSquare, promotion: 'q' };\n    const legalMoves = game.moves({ verbose: true });\n    const isLegal = legalMoves.some(m => m.from === sourceSquare && m.to === targetSquare);\n    setPrevFen(game.fen());\n    let move = null;\n    try {\n      move = game.move(moveObj);\n    } catch (err: any) {\n      debug = `Exception: ${err?.message || err}`;\n      setMoveError('Invalid move: ' + (err?.message || 'Unknown error.'));\n      setGame(new Chess(prevFen));\n      setDebugInfo(`Move: ${JSON.stringify(moveObj)}\\nLegal moves: ${JSON.stringify(legalMoves)}\\n${debug}`);\n      console.log('DEBUG: Move failed', { moveObj, legalMoves, error: err });\n      return false;\n    }\n    if (move) {\n      setMoveError(null);\n      setDebugInfo(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({ from: move.from, to: move.to });\n      return true;\n    } else {\n      // Advanced rule feedback\n      const fromPiece = game.get(sourceSquare as Square);\n      if (!fromPiece) {\n        setMoveError('No piece on that square.');\n        debug = 'No piece on that square.';\n      } else if (fromPiece.color !== game.turn()) {\n        setMoveError(\"You can't move your opponent's piece.\");\n        debug = 'Tried to move opponent piece.';\n      } else if (!isLegal) {\n        const canMove = legalMoves.some(m => m.from === sourceSquare);\n        if (!canMove) {\n          setMoveError('This piece cannot move right now (it may be blocked or pinned).');\n          debug = 'Piece cannot move (blocked or pinned).';\n        } else {\n          if (['b', 'r', 'q'].includes(fromPiece.type)) {\n            setMoveError('That move is blocked by another piece.');\n            debug = 'Path blocked.';\n          } else {\n            setMoveError('That move is not legal for this piece.');\n            debug = 'Move not legal for this piece.';\n          }\n        }\n      } else {\n        const moveStr = legalMoves.find(m => m.from === sourceSquare && m.to === targetSquare)?.san || '';\n        if (moveStr.includes('O-O')) {\n          setMoveError('You cannot castle through, into, or out of check.');\n          debug = 'Castling through/into check.';\n        } else if (sourceSquare[1] === '7' && fromPiece && fromPiece.type === 'p' && targetSquare[1] === '8' && !moveObj.promotion) {\n          setMoveError('You must promote your pawn when it reaches the last rank.');\n          debug = 'Pawn promotion required.';\n        } else {\n          const clone = new Chess(game.fen());\n          try {\n            const result = clone.move(moveObj);\n            if (result && clone.inCheck()) {\n              setMoveError('You cannot move this piece because it would leave your king in check (pinned piece or discovered check).');\n              debug = 'Move would leave king in check.';\n            } else {\n              setMoveError('Illegal move!');\n              debug = 'Unknown illegal move.';\n            }\n          } catch (err: any) {\n            setMoveError('Illegal move!');\n            debug = `Exception: ${err?.message || err}`;\n          }\n        }\n      }\n      setGame(new Chess(prevFen));\n      setDebugInfo(`Move: ${JSON.stringify(moveObj)}\\nLegal moves: ${JSON.stringify(legalMoves)}\\n${debug}`);\n      console.log('DEBUG: Move failed', { moveObj, legalMoves, debug });\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Move hint logic\n  const handleSquareClick = (square: string) => {\n    // Find all legal moves from this square\n    const legalMoves = game.moves({ verbose: true });\n    const hints = legalMoves.filter(m => m.from === square).map(m => m.to);\n    setHintSquares(hints);\n  };\n  const handleBoardClick = () => {\n    setHintSquares([]);\n  };\n\n  // Merge move hints with last move highlights\n  const customSquareStyles = {\n    ...(lastMoveSquares\n      ? {\n          [lastMoveSquares.from]: {\n            background: '#FFD700',\n            boxShadow: '0 0 10px 2px #FFD700',\n          },\n          [lastMoveSquares.to]: {\n            background: '#B22222',\n            boxShadow: '0 0 10px 2px #B22222',\n          },\n        }\n      : {}),\n    ...hintSquares.reduce((acc, sq) => {\n      acc[sq] = {\n        background: 'radial-gradient(circle, #FFD700 60%, #BCAAA4 100%)',\n        boxShadow: '0 0 8px 2px #FFD700',\n      };\n      return acc;\n    }, {} as Record<string, any>),\n  };\n\n  // Undo move handler for solo/AI mode\n  const handleUndo = () => {\n    if (aiMode && onUndoAiMove) {\n      onUndoAiMove();\n      return;\n    }\n    if (!soloMode) return;\n    if (moves.length === 0) return;\n    const newMoves = moves.slice(0, -1);\n    const chess = new Chess();\n    newMoves.forEach((move) => {\n      try { chess.move(move); } catch {}\n    });\n    setGame(chess);\n    setLastMoveSquares(null);\n    setMoveError(null);\n  };\n\n  const handleResign = () => {\n    socket.emit('resign', window.location.pathname.replace('/', '') || 'room1');\n  };\n  const handleOfferDraw = () => {\n    socket.emit('offerDraw', window.location.pathname.replace('/', '') || 'room1');\n    setMpMessage('Draw offer sent.');\n  };\n  const handleDrawResponse = (accepted: boolean) => {\n    socket.emit('drawResponse', { gameId: window.location.pathname.replace('/', '') || 'room1', accepted });\n    setDrawOffer(null);\n    setMpMessage(accepted ? 'Draw accepted.' : 'Draw declined.');\n  };\n\n  return (\n    <div className=\"chessboard-container\">\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={handlePieceDrop}\n        boardWidth={boardWidth}\n        boardOrientation={boardOrientation || (playerColor === 'b' ? 'black' : 'white')}\n        customBoardStyle={{\n          borderRadius: '8px',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.6)',\n        }}\n        customDarkSquareStyle={{ backgroundColor: boardColors.dark }}\n        customLightSquareStyle={{ backgroundColor: boardColors.light }}\n        customSquareStyles={customSquareStyles}\n        arePiecesDraggable={!!soloMode || (!!playerColor && playerColor === turn)}\n        onSquareClick={handleSquareClick}\n        onMouseOutSquare={handleBoardClick}\n      />\n      <div style={{ display: 'flex', gap: 8, marginLeft: 'auto', marginTop: 12 }}>\n        {(soloMode || aiMode) && (\n          <button onClick={handleUndo} disabled={moves.length === 0} style={{ background: '#BCAAA4', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: moves.length === 0 ? 'not-allowed' : 'pointer' }}>Undo Move</button>\n        )}\n        {!soloMode && !aiMode && (\n          <>\n            <button onClick={handleResign} style={{ background: '#B22222', color: '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Resign</button>\n            <button onClick={handleOfferDraw} style={{ background: '#4682B4', color: '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Offer Draw</button>\n          </>\n        )}\n        <button onClick={() => setShowHelp(true)} style={{ background: '#FFD700', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Help</button>\n      </div>\n      {!soloMode && !aiMode && mpMessage && (\n        <div style={{ color: '#FFD700', fontWeight: 'bold', marginTop: 8 }}>{mpMessage}</div>\n      )}\n      {!soloMode && !aiMode && drawOffer && (\n        <div style={{ color: '#FFD700', fontWeight: 'bold', marginTop: 8 }}>\n          Opponent offered a draw. Accept?\n          <button onClick={() => handleDrawResponse(true)} style={{ marginLeft: 8, background: '#FFD700', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '4px 12px', cursor: 'pointer' }}>Accept</button>\n          <button onClick={() => handleDrawResponse(false)} style={{ marginLeft: 8, background: '#B22222', color: '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '4px 12px', cursor: 'pointer' }}>Decline</button>\n        </div>\n      )}\n      {!soloMode && !aiMode && gameOver && (\n        <div style={{ color: '#FFD700', fontWeight: 'bold', marginTop: 8 }}>{gameOver}</div>\n      )}\n      {showHelp && (\n        <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: 'rgba(0,0,0,0.7)', zIndex: 1000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <div style={{ background: '#222', color: '#FFD700', borderRadius: 12, padding: 32, maxWidth: 400, textAlign: 'left', boxShadow: '0 4px 24px #000' }}>\n            <h2 style={{ marginTop: 0 }}>Chess Move Rules & Tips</h2>\n            <ul style={{ color: '#FFD700', fontSize: '1em', paddingLeft: 20 }}>\n              <li>Only move your own pieces on your turn.</li>\n              <li>Pawns move forward, capture diagonally, and promote on the last rank.</li>\n              <li>Knights jump in an L-shape. Bishops move diagonally. Rooks move straight. Queens move any direction. Kings move one square.</li>\n              <li>You cannot move into or through check. Pinned pieces cannot move if it exposes your king.</li>\n              <li>Castling is only allowed if neither the king nor rook has moved, the squares between are empty, and the king does not move through or into check.</li>\n              <li>En passant is a special pawn capture after a two-square pawn move.</li>\n              <li>If you try an illegal move, the board will reset and you'll see an explanation here.</li>\n            </ul>\n            <button onClick={() => setShowHelp(false)} style={{ marginTop: 16, background: '#FFD700', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Close</button>\n          </div>\n        </div>\n      )}\n      {debugInfo && (\n        <pre style={{ color: '#FFD700', background: '#222', borderRadius: 8, padding: 8, marginTop: 8, fontSize: '0.9em', whiteSpace: 'pre-wrap' }}>{debugInfo}</pre>\n      )}\n    </div>\n  );\n};\n\nexport default ChessboardComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}