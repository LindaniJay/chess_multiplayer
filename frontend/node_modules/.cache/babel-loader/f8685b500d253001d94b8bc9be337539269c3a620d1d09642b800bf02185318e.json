{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport Chessboard from './Chessboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst App = () => {\n  _s();\n  const [gameId, setGameId] = useState('room1');\n  const [connected, setConnected] = useState(false);\n  const [players, setPlayers] = useState(0);\n  const [fen, setFen] = useState('start');\n  const [moves, setMoves] = useState([]);\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnected(true);\n      socket.emit('joinGame', gameId);\n    });\n    socket.on('joinedGame', ({\n      fen,\n      moves\n    }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n    });\n    socket.on('playerUpdate', count => setPlayers(count));\n    socket.on('moveMade', move => {\n      setMoves(prev => [...prev, move]);\n    });\n    socket.on('fullGame', msg => alert(msg));\n    return () => {\n      socket.off('connect');\n      socket.off('joinedGame');\n      socket.off('playerUpdate');\n      socket.off('moveMade');\n      socket.off('fullGame');\n    };\n  }, [gameId]);\n  const sendMove = move => {\n    socket.emit('makeMove', {\n      gameId,\n      move\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Multiplayer Chess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game ID: \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Players connected: \", players]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      fen: fen,\n      moves: moves,\n      onMove: move => sendMove(move)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oVO7jWNbCHOV6B+A1AsUBBywQmo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","Chessboard","jsxDEV","_jsxDEV","socket","App","_s","gameId","setGameId","connected","setConnected","players","setPlayers","fen","setFen","moves","setMoves","on","emit","count","move","prev","msg","alert","off","sendMove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMove","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Chessboard from './Chessboard';\n\nconst socket = io('http://localhost:4000');\n\nconst App: React.FC = () => {\n  const [gameId, setGameId] = useState('room1');\n  const [connected, setConnected] = useState(false);\n  const [players, setPlayers] = useState(0);\n  const [fen, setFen] = useState('start');\n  const [moves, setMoves] = useState<string[]>([]);\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnected(true);\n      socket.emit('joinGame', gameId);\n    });\n\n    socket.on('joinedGame', ({ fen, moves }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n    });\n\n    socket.on('playerUpdate', (count) => setPlayers(count));\n\n    socket.on('moveMade', (move) => {\n      setMoves((prev) => [...prev, move]);\n    });\n\n    socket.on('fullGame', (msg) => alert(msg));\n\n    return () => {\n      socket.off('connect');\n      socket.off('joinedGame');\n      socket.off('playerUpdate');\n      socket.off('moveMade');\n      socket.off('fullGame');\n    };\n  }, [gameId]);\n\n  const sendMove = (move: string) => {\n    socket.emit('makeMove', { gameId, move });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Multiplayer Chess</h1>\n      <p>Game ID: {gameId}</p>\n      <p>Players connected: {players}</p>\n      <Chessboard\n        fen={fen}\n        moves={moves}\n        onMove={(move) => sendMove(move)}\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}