{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport ChessboardComponent from './Chessboard';\nimport './App.css';\nimport { Chess } from 'chess.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst App = () => {\n  _s();\n  const [gameId, setGameId] = useState('room1');\n  const [connected, setConnected] = useState(false);\n  const [players, setPlayers] = useState(0);\n  const [fen, setFen] = useState('start');\n  const [moves, setMoves] = useState([]);\n  const [playerColor, setPlayerColor] = useState(null);\n  const [turn, setTurn] = useState('w');\n  const [status, setStatus] = useState('');\n  const [playerIDs, setPlayerIDs] = useState([]);\n  const [myID, setMyID] = useState('');\n  const INITIAL_TIME = 5 * 60; // 5 minutes in seconds\n  const [whiteTime, setWhiteTime] = useState(INITIAL_TIME);\n  const [blackTime, setBlackTime] = useState(INITIAL_TIME);\n  const [timerActive, setTimerActive] = useState(true);\n  const [error, setError] = useState(null);\n  const [showCover, setShowCover] = useState(true);\n  const [inputName, setInputName] = useState('');\n  const [inputRoom, setInputRoom] = useState('room1');\n  const [playerName, setPlayerName] = useState('');\n  const [playerNames, setPlayerNames] = useState({});\n  const [mode, setMode] = useState('online');\n  const [soloFen, setSoloFen] = useState('start');\n  const [soloMoves, setSoloMoves] = useState([]);\n  const [soloTurn, setSoloTurn] = useState('w');\n  const [soloStatus, setSoloStatus] = useState('');\n  const [soloBoardOrientation, setSoloBoardOrientation] = useState('white');\n  const [aiFen, setAiFen] = useState('start');\n  const [aiMoves, setAiMoves] = useState([]);\n  const [aiTurn, setAiTurn] = useState('w');\n  const [aiStatus, setAiStatus] = useState('');\n  const [aiError, setAiError] = useState('');\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnected(true);\n      socket.emit('joinGame', gameId);\n    });\n    socket.on('joinedGame', ({\n      fen,\n      moves,\n      color,\n      turn,\n      playerIDs,\n      playerNames: namesFromServer\n    }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n      setPlayerColor(color);\n      setTurn(turn || 'w');\n      if (playerIDs) setPlayerIDs(playerIDs);\n      if (namesFromServer) setPlayerNames(namesFromServer);\n    });\n    socket.on('playerUpdate', count => setPlayers(count));\n    socket.on('moveMade', (move, newTurn) => {\n      setMoves(prev => [...prev, move]);\n      setTurn(newTurn || (turn === 'w' ? 'b' : 'w'));\n    });\n    socket.on('fullGame', msg => alert(msg));\n    socket.on('playerNamesUpdate', namesFromServer => {\n      setPlayerNames(namesFromServer);\n    });\n    socket.on('rematchStarted', ({\n      fen,\n      moves,\n      turn,\n      playerIDs,\n      playerNames: namesFromServer\n    }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n      setTurn(turn || 'w');\n      setStatus('');\n      if (playerIDs) setPlayerIDs(playerIDs);\n      if (namesFromServer) setPlayerNames(namesFromServer);\n    });\n    setMyID(socket.id || '');\n    return () => {\n      socket.off('connect');\n      socket.off('joinedGame');\n      socket.off('playerUpdate');\n      socket.off('moveMade');\n      socket.off('fullGame');\n      socket.off('playerNamesUpdate');\n      socket.off('rematchStarted');\n    };\n  }, [gameId]);\n  useEffect(() => {\n    try {\n      const chess = new Chess();\n      if (fen && fen !== 'start') chess.load(fen);\n      moves.forEach(move => chess.move(move));\n      if (chess.isCheckmate()) {\n        setStatus('Checkmate!');\n      } else if (chess.isStalemate()) {\n        setStatus('Stalemate!');\n      } else if (chess.isCheck()) {\n        setStatus('Check!');\n      } else {\n        setStatus('');\n      }\n      setError(null);\n    } catch (err) {\n      console.error('Chess.js error:', err);\n      setError('A chess error occurred: ' + ((err === null || err === void 0 ? void 0 : err.message) || err));\n    }\n  }, [fen, moves]);\n  const sendMove = move => {\n    socket.emit('makeMove', {\n      gameId,\n      move\n    });\n  };\n  const handleRematch = () => {\n    socket.emit('rematch', gameId);\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (!timerActive || !playerColor) return;\n    let interval = null;\n    if (turn === 'w' && playerColor === 'w' || turn === 'b' && playerColor === 'b') {\n      interval = setInterval(() => {\n        if (turn === 'w') {\n          setWhiteTime(t => t > 0 ? t - 1 : 0);\n        } else {\n          setBlackTime(t => t > 0 ? t - 1 : 0);\n        }\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [turn, playerColor, timerActive]);\n\n  // End game if timer runs out\n  useEffect(() => {\n    if (whiteTime === 0 || blackTime === 0) {\n      setTimerActive(false);\n      setStatus(\"Time's up! \" + (whiteTime === 0 ? 'Black wins!' : 'White wins!'));\n    }\n  }, [whiteTime, blackTime]);\n\n  // Reset timers on rematch\n  useEffect(() => {\n    setWhiteTime(INITIAL_TIME);\n    setBlackTime(INITIAL_TIME);\n    setTimerActive(true);\n  }, [fen, moves.length === 0]);\n  function formatTime(seconds) {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m}:${s.toString().padStart(2, '0')}`;\n  }\n  const handleJoin = e => {\n    e.preventDefault();\n    if (!inputName.trim()) return;\n    setPlayerName(inputName.trim());\n    setGameId(inputRoom.trim() || 'room1');\n    setShowCover(false);\n  };\n  useEffect(() => {\n    if (!showCover) {\n      socket.emit('joinGame', gameId, playerName);\n    }\n  }, [showCover, gameId, playerName]);\n\n  // Solo mode move handler\n  const handleSoloMove = move => {\n    const chess = new Chess(soloFen === 'start' ? undefined : soloFen);\n    chess.move(move);\n    setSoloFen(chess.fen());\n    setSoloMoves(prev => [...prev, move]);\n    setSoloTurn(chess.turn());\n    if (chess.isCheckmate()) setSoloStatus('Checkmate!');else if (chess.isStalemate()) setSoloStatus('Stalemate!');else if (chess.isCheck()) setSoloStatus('Check!');else setSoloStatus('');\n  };\n  const handleSoloRematch = () => {\n    setSoloFen('start');\n    setSoloMoves([]);\n    setSoloTurn('w');\n    setSoloStatus('');\n  };\n  const handleSoloReset = () => {\n    setSoloFen('start');\n    setSoloMoves([]);\n    setSoloTurn('w');\n    setSoloStatus('');\n  };\n  function getRandomMove(chess) {\n    const moves = chess.moves();\n    if (moves.length === 0) return null;\n    return moves[Math.floor(Math.random() * moves.length)];\n  }\n  const handleAiMove = move => {\n    setAiError('');\n    const chess = new Chess(aiFen === 'start' ? undefined : aiFen);\n    const result = chess.move(move);\n    if (!result) {\n      setAiError('Illegal move!');\n      return;\n    }\n    setAiFen(chess.fen());\n    setAiMoves(prev => [...prev, move]);\n    setAiTurn(chess.turn());\n    if (chess.isCheckmate()) setAiStatus('Checkmate!');else if (chess.isStalemate()) setAiStatus('Stalemate!');else if (chess.isCheck()) setAiStatus('Check!');else setAiStatus('');\n\n    // If it's now black's turn and game not over, let AI move\n    if (chess.turn() === 'b' && !chess.isGameOver()) {\n      setTimeout(() => {\n        const aiChess = new Chess(chess.fen());\n        const aiMove = getRandomMove(aiChess);\n        if (aiMove) {\n          aiChess.move(aiMove);\n          setAiFen(aiChess.fen());\n          setAiMoves(prev => [...prev, aiMove]);\n          setAiTurn(aiChess.turn());\n          if (aiChess.isCheckmate()) setAiStatus('Checkmate!');else if (aiChess.isStalemate()) setAiStatus('Stalemate!');else if (aiChess.isCheck()) setAiStatus('Check!');else setAiStatus('');\n        }\n      }, 500);\n    }\n  };\n  const handleAiRematch = () => {\n    setAiFen('start');\n    setAiMoves([]);\n    setAiTurn('w');\n    setAiStatus('');\n    setAiError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: showCover ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleJoin,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: '#FFD700',\n          marginBottom: 24\n        },\n        children: \"Multiplayer Chess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 16,\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setMode('online'),\n          style: {\n            background: mode === 'online' ? '#FFD700' : '#222',\n            color: mode === 'online' ? '#222' : '#FFD700',\n            fontWeight: 'bold',\n            border: '2px solid #FFD700',\n            borderRadius: 6,\n            padding: '8px 20px',\n            cursor: 'pointer'\n          },\n          children: \"Play Online\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setMode('solo'),\n          style: {\n            background: mode === 'solo' ? '#FFD700' : '#222',\n            color: mode === 'solo' ? '#222' : '#FFD700',\n            fontWeight: 'bold',\n            border: '2px solid #FFD700',\n            borderRadius: 6,\n            padding: '8px 20px',\n            cursor: 'pointer'\n          },\n          children: \"Play Solo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setMode('ai'),\n          style: {\n            background: mode === 'ai' ? '#FFD700' : '#222',\n            color: mode === 'ai' ? '#222' : '#FFD700',\n            fontWeight: 'bold',\n            border: '2px solid #FFD700',\n            borderRadius: 6,\n            padding: '8px 20px',\n            cursor: 'pointer'\n          },\n          children: \"Play vs AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), mode === 'online' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your Name\",\n          value: inputName,\n          onChange: e => setInputName(e.target.value),\n          style: {\n            padding: 10,\n            borderRadius: 6,\n            border: '1px solid #BCAAA4',\n            fontSize: '1.1em',\n            width: 220\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Room Code (optional)\",\n          value: inputRoom,\n          onChange: e => setInputRoom(e.target.value),\n          style: {\n            padding: 10,\n            borderRadius: 6,\n            border: '1px solid #BCAAA4',\n            fontSize: '1.1em',\n            width: 220\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: 16,\n            width: 220\n          },\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), mode === 'solo' && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: {\n          marginTop: 16,\n          width: 220\n        },\n        onClick: () => setShowCover(false),\n        children: \"Start Solo Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this) : mode === 'ai' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chess vs AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), aiStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#FFD700',\n          fontWeight: 'bold'\n        },\n        children: aiStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 24\n      }, this), aiError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold'\n        },\n        children: aiError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(ChessboardComponent, {\n        fen: aiFen,\n        moves: aiMoves,\n        onMove: handleAiMove,\n        playerColor: 'w',\n        turn: aiTurn,\n        soloMode: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#FFD700',\n            marginBottom: 8\n          },\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            color: '#BCAAA4',\n            background: '#222',\n            borderRadius: 8,\n            padding: 12,\n            maxHeight: 200,\n            overflowY: 'auto'\n          },\n          children: aiMoves.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: move\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          marginBottom: 8,\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAiRematch,\n          children: \"Rematch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCover(true),\n          children: \"Back to Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : mode === 'solo' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Solo Chess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), soloStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#FFD700',\n          fontWeight: 'bold'\n        },\n        children: soloStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(ChessboardComponent, {\n        fen: soloFen,\n        moves: soloMoves,\n        onMove: handleSoloMove,\n        playerColor: soloTurn,\n        turn: soloTurn,\n        soloMode: true,\n        boardOrientation: soloBoardOrientation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#FFD700',\n            marginBottom: 8\n          },\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            color: '#BCAAA4',\n            background: '#222',\n            borderRadius: 8,\n            padding: 12,\n            maxHeight: 200,\n            overflowY: 'auto'\n          },\n          children: soloMoves.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: move\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          marginBottom: 8,\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSoloRematch,\n          children: \"Rematch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSoloReset,\n          children: \"Reset Solo Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSoloBoardOrientation(o => o === 'white' ? 'black' : 'white'),\n          children: \"Flip Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCover(true),\n          children: \"Back to Cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold',\n          marginBottom: 16\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Multiplayer Chess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game ID: \", gameId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Players connected: \", players]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), playerColor && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your color: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: playerColor === 'w' ? '#FFD700' : '#B22222',\n            fontWeight: 'bold'\n          },\n          children: playerColor === 'w' ? 'White' : 'Black'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: turn === 'w' ? '#FFD700' : '#B22222',\n            fontWeight: 'bold'\n          },\n          children: turn === 'w' ? 'White' : 'Black'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#FFD700',\n          fontWeight: 'bold'\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          margin: '16px 0',\n          background: '#181818',\n          borderRadius: 8,\n          padding: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: '#FFD700',\n              margin: 0,\n              marginBottom: 8\n            },\n            children: \"Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), playerIDs.map((id, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: idx === 0 ? '#FFD700' : '#B22222',\n              fontWeight: myID === id ? 'bold' : 'normal'\n            },\n            children: [myID === id ? 'You' : `Opponent`, \" (\", idx === 0 ? 'White' : 'Black', \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 87\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '1em',\n                color: '#FFD700'\n              },\n              children: playerNames[id] || id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.85em',\n                color: '#BCAAA4'\n              },\n              children: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 19\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#FFD700',\n              fontWeight: 'bold',\n              fontSize: '1.1em'\n            },\n            children: [\"White: \", formatTime(whiteTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#B22222',\n              fontWeight: 'bold',\n              fontSize: '1.1em'\n            },\n            children: [\"Black: \", formatTime(blackTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChessboardComponent, {\n        fen: fen,\n        moves: moves,\n        onMove: move => sendMove(move),\n        playerColor: playerColor,\n        turn: turn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 24\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#FFD700',\n            marginBottom: 8\n          },\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            color: '#BCAAA4',\n            background: '#222',\n            borderRadius: 8,\n            padding: 12,\n            maxHeight: 200,\n            overflowY: 'auto'\n          },\n          children: moves.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: move\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16,\n          marginBottom: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRematch,\n          disabled: !status || status !== 'Checkmate!' && status !== 'Stalemate!',\n          style: {\n            opacity: !status || status !== 'Checkmate!' && status !== 'Stalemate!' ? 0.5 : 1\n          },\n          children: \"Rematch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7sLyVqSki2xtK+dV5c9+HzeAhpI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","ChessboardComponent","Chess","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","App","_s","gameId","setGameId","connected","setConnected","players","setPlayers","fen","setFen","moves","setMoves","playerColor","setPlayerColor","turn","setTurn","status","setStatus","playerIDs","setPlayerIDs","myID","setMyID","INITIAL_TIME","whiteTime","setWhiteTime","blackTime","setBlackTime","timerActive","setTimerActive","error","setError","showCover","setShowCover","inputName","setInputName","inputRoom","setInputRoom","playerName","setPlayerName","playerNames","setPlayerNames","mode","setMode","soloFen","setSoloFen","soloMoves","setSoloMoves","soloTurn","setSoloTurn","soloStatus","setSoloStatus","soloBoardOrientation","setSoloBoardOrientation","aiFen","setAiFen","aiMoves","setAiMoves","aiTurn","setAiTurn","aiStatus","setAiStatus","aiError","setAiError","on","emit","color","namesFromServer","count","move","newTurn","prev","msg","alert","id","off","chess","load","forEach","isCheckmate","isStalemate","isCheck","err","console","message","sendMove","handleRematch","interval","setInterval","t","clearInterval","length","formatTime","seconds","m","Math","floor","s","toString","padStart","handleJoin","e","preventDefault","trim","handleSoloMove","undefined","handleSoloRematch","handleSoloReset","getRandomMove","random","handleAiMove","result","isGameOver","setTimeout","aiChess","aiMove","handleAiRematch","className","children","onSubmit","style","display","flexDirection","alignItems","gap","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","background","fontWeight","border","borderRadius","padding","cursor","placeholder","value","onChange","target","fontSize","width","required","marginTop","onMove","soloMode","maxHeight","overflowY","map","idx","boardOrientation","o","justifyContent","margin","disabled","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport ChessboardComponent from './Chessboard';\nimport './App.css';\nimport { Chess } from 'chess.js';\n\nconst socket = io('http://localhost:4000');\n\nconst App: React.FC = () => {\n  const [gameId, setGameId] = useState('room1');\n  const [connected, setConnected] = useState(false);\n  const [players, setPlayers] = useState(0);\n  const [fen, setFen] = useState('start');\n  const [moves, setMoves] = useState<string[]>([]);\n  const [playerColor, setPlayerColor] = useState<'w' | 'b' | null>(null);\n  const [turn, setTurn] = useState<'w' | 'b'>('w');\n  const [status, setStatus] = useState<string>('');\n  const [playerIDs, setPlayerIDs] = useState<string[]>([]);\n  const [myID, setMyID] = useState<string>('');\n  const INITIAL_TIME = 5 * 60; // 5 minutes in seconds\n  const [whiteTime, setWhiteTime] = useState(INITIAL_TIME);\n  const [blackTime, setBlackTime] = useState(INITIAL_TIME);\n  const [timerActive, setTimerActive] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showCover, setShowCover] = useState(true);\n  const [inputName, setInputName] = useState('');\n  const [inputRoom, setInputRoom] = useState('room1');\n  const [playerName, setPlayerName] = useState('');\n  const [playerNames, setPlayerNames] = useState<{[id: string]: string}>({});\n  const [mode, setMode] = useState<'online' | 'solo' | 'ai'>('online');\n  const [soloFen, setSoloFen] = useState('start');\n  const [soloMoves, setSoloMoves] = useState<string[]>([]);\n  const [soloTurn, setSoloTurn] = useState<'w' | 'b'>('w');\n  const [soloStatus, setSoloStatus] = useState('');\n  const [soloBoardOrientation, setSoloBoardOrientation] = useState<'white' | 'black'>('white');\n  const [aiFen, setAiFen] = useState('start');\n  const [aiMoves, setAiMoves] = useState<string[]>([]);\n  const [aiTurn, setAiTurn] = useState<'w' | 'b'>('w');\n  const [aiStatus, setAiStatus] = useState('');\n  const [aiError, setAiError] = useState('');\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnected(true);\n      socket.emit('joinGame', gameId);\n    });\n\n    socket.on('joinedGame', ({ fen, moves, color, turn, playerIDs, playerNames: namesFromServer }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n      setPlayerColor(color);\n      setTurn(turn || 'w');\n      if (playerIDs) setPlayerIDs(playerIDs);\n      if (namesFromServer) setPlayerNames(namesFromServer);\n    });\n\n    socket.on('playerUpdate', (count) => setPlayers(count));\n\n    socket.on('moveMade', (move, newTurn) => {\n      setMoves((prev) => [...prev, move]);\n      setTurn(newTurn || (turn === 'w' ? 'b' : 'w'));\n    });\n\n    socket.on('fullGame', (msg) => alert(msg));\n\n    socket.on('playerNamesUpdate', (namesFromServer) => {\n      setPlayerNames(namesFromServer);\n    });\n\n    socket.on('rematchStarted', ({ fen, moves, turn, playerIDs, playerNames: namesFromServer }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n      setTurn(turn || 'w');\n      setStatus('');\n      if (playerIDs) setPlayerIDs(playerIDs);\n      if (namesFromServer) setPlayerNames(namesFromServer);\n    });\n\n    setMyID(socket.id || '');\n\n    return () => {\n      socket.off('connect');\n      socket.off('joinedGame');\n      socket.off('playerUpdate');\n      socket.off('moveMade');\n      socket.off('fullGame');\n      socket.off('playerNamesUpdate');\n      socket.off('rematchStarted');\n    };\n  }, [gameId]);\n\n  useEffect(() => {\n    try {\n      const chess = new Chess();\n      if (fen && fen !== 'start') chess.load(fen);\n      moves.forEach((move) => chess.move(move));\n      if (chess.isCheckmate()) {\n        setStatus('Checkmate!');\n      } else if (chess.isStalemate()) {\n        setStatus('Stalemate!');\n      } else if (chess.isCheck()) {\n        setStatus('Check!');\n      } else {\n        setStatus('');\n      }\n      setError(null);\n    } catch (err: any) {\n      console.error('Chess.js error:', err);\n      setError('A chess error occurred: ' + (err?.message || err));\n    }\n  }, [fen, moves]);\n\n  const sendMove = (move: string) => {\n    socket.emit('makeMove', { gameId, move });\n  };\n\n  const handleRematch = () => {\n    socket.emit('rematch', gameId);\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (!timerActive || !playerColor) return;\n    let interval: NodeJS.Timeout | null = null;\n    if ((turn === 'w' && playerColor === 'w') || (turn === 'b' && playerColor === 'b')) {\n      interval = setInterval(() => {\n        if (turn === 'w') {\n          setWhiteTime((t) => (t > 0 ? t - 1 : 0));\n        } else {\n          setBlackTime((t) => (t > 0 ? t - 1 : 0));\n        }\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [turn, playerColor, timerActive]);\n\n  // End game if timer runs out\n  useEffect(() => {\n    if (whiteTime === 0 || blackTime === 0) {\n      setTimerActive(false);\n      setStatus(\"Time's up! \" + (whiteTime === 0 ? 'Black wins!' : 'White wins!'));\n    }\n  }, [whiteTime, blackTime]);\n\n  // Reset timers on rematch\n  useEffect(() => {\n    setWhiteTime(INITIAL_TIME);\n    setBlackTime(INITIAL_TIME);\n    setTimerActive(true);\n  }, [fen, moves.length === 0]);\n\n  function formatTime(seconds: number) {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m}:${s.toString().padStart(2, '0')}`;\n  }\n\n  const handleJoin = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!inputName.trim()) return;\n    setPlayerName(inputName.trim());\n    setGameId(inputRoom.trim() || 'room1');\n    setShowCover(false);\n  };\n\n  useEffect(() => {\n    if (!showCover) {\n      socket.emit('joinGame', gameId, playerName);\n    }\n  }, [showCover, gameId, playerName]);\n\n  // Solo mode move handler\n  const handleSoloMove = (move: string) => {\n    const chess = new Chess(soloFen === 'start' ? undefined : soloFen);\n    chess.move(move);\n    setSoloFen(chess.fen());\n    setSoloMoves((prev) => [...prev, move]);\n    setSoloTurn(chess.turn());\n    if (chess.isCheckmate()) setSoloStatus('Checkmate!');\n    else if (chess.isStalemate()) setSoloStatus('Stalemate!');\n    else if (chess.isCheck()) setSoloStatus('Check!');\n    else setSoloStatus('');\n  };\n\n  const handleSoloRematch = () => {\n    setSoloFen('start');\n    setSoloMoves([]);\n    setSoloTurn('w');\n    setSoloStatus('');\n  };\n\n  const handleSoloReset = () => {\n    setSoloFen('start');\n    setSoloMoves([]);\n    setSoloTurn('w');\n    setSoloStatus('');\n  };\n\n  function getRandomMove(chess) {\n    const moves = chess.moves();\n    if (moves.length === 0) return null;\n    return moves[Math.floor(Math.random() * moves.length)];\n  }\n\n  const handleAiMove = (move: string) => {\n    setAiError('');\n    const chess = new Chess(aiFen === 'start' ? undefined : aiFen);\n    const result = chess.move(move);\n    if (!result) {\n      setAiError('Illegal move!');\n      return;\n    }\n    setAiFen(chess.fen());\n    setAiMoves((prev) => [...prev, move]);\n    setAiTurn(chess.turn());\n    if (chess.isCheckmate()) setAiStatus('Checkmate!');\n    else if (chess.isStalemate()) setAiStatus('Stalemate!');\n    else if (chess.isCheck()) setAiStatus('Check!');\n    else setAiStatus('');\n\n    // If it's now black's turn and game not over, let AI move\n    if (chess.turn() === 'b' && !chess.isGameOver()) {\n      setTimeout(() => {\n        const aiChess = new Chess(chess.fen());\n        const aiMove = getRandomMove(aiChess);\n        if (aiMove) {\n          aiChess.move(aiMove);\n          setAiFen(aiChess.fen());\n          setAiMoves((prev) => [...prev, aiMove]);\n          setAiTurn(aiChess.turn());\n          if (aiChess.isCheckmate()) setAiStatus('Checkmate!');\n          else if (aiChess.isStalemate()) setAiStatus('Stalemate!');\n          else if (aiChess.isCheck()) setAiStatus('Check!');\n          else setAiStatus('');\n        }\n      }, 500);\n    }\n  };\n\n  const handleAiRematch = () => {\n    setAiFen('start');\n    setAiMoves([]);\n    setAiTurn('w');\n    setAiStatus('');\n    setAiError('');\n  };\n\n  return (\n    <div className=\"app-container\">\n      {showCover ? (\n        <form onSubmit={handleJoin} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 16 }}>\n          <h1 style={{ color: '#FFD700', marginBottom: 24 }}>Multiplayer Chess</h1>\n          <div style={{ display: 'flex', gap: 16, marginBottom: 16 }}>\n            <button type=\"button\" onClick={() => setMode('online')} style={{ background: mode === 'online' ? '#FFD700' : '#222', color: mode === 'online' ? '#222' : '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '8px 20px', cursor: 'pointer' }}>Play Online</button>\n            <button type=\"button\" onClick={() => setMode('solo')} style={{ background: mode === 'solo' ? '#FFD700' : '#222', color: mode === 'solo' ? '#222' : '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '8px 20px', cursor: 'pointer' }}>Play Solo</button>\n            <button type=\"button\" onClick={() => setMode('ai')} style={{ background: mode === 'ai' ? '#FFD700' : '#222', color: mode === 'ai' ? '#222' : '#FFD700', fontWeight: 'bold', border: '2px solid #FFD700', borderRadius: 6, padding: '8px 20px', cursor: 'pointer' }}>Play vs AI</button>\n          </div>\n          {mode === 'online' && (\n            <>\n              <input\n                type=\"text\"\n                placeholder=\"Your Name\"\n                value={inputName}\n                onChange={e => setInputName(e.target.value)}\n                style={{ padding: 10, borderRadius: 6, border: '1px solid #BCAAA4', fontSize: '1.1em', width: 220 }}\n                required\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Room Code (optional)\"\n                value={inputRoom}\n                onChange={e => setInputRoom(e.target.value)}\n                style={{ padding: 10, borderRadius: 6, border: '1px solid #BCAAA4', fontSize: '1.1em', width: 220 }}\n              />\n              <button type=\"submit\" style={{ marginTop: 16, width: 220 }}>Join Game</button>\n            </>\n          )}\n          {mode === 'solo' && (\n            <button type=\"button\" style={{ marginTop: 16, width: 220 }} onClick={() => setShowCover(false)}>Start Solo Game</button>\n          )}\n        </form>\n      ) : mode === 'ai' ? (\n        <>\n          <h1>Chess vs AI</h1>\n          {aiStatus && <p style={{ color: '#FFD700', fontWeight: 'bold' }}>{aiStatus}</p>}\n          {aiError && <p style={{ color: 'red', fontWeight: 'bold' }}>{aiError}</p>}\n          <ChessboardComponent\n            fen={aiFen}\n            moves={aiMoves}\n            onMove={handleAiMove}\n            playerColor={'w'}\n            turn={aiTurn}\n            soloMode={true}\n          />\n          <div style={{ marginTop: 24 }}>\n            <h3 style={{ color: '#FFD700', marginBottom: 8 }}>Move History</h3>\n            <ol style={{ color: '#BCAAA4', background: '#222', borderRadius: 8, padding: 12, maxHeight: 200, overflowY: 'auto' }}>\n              {aiMoves.map((move, idx) => (\n                <li key={idx}>{move}</li>\n              ))}\n            </ol>\n          </div>\n          <div style={{ marginTop: 16, marginBottom: 8, display: 'flex', gap: 12 }}>\n            <button onClick={handleAiRematch}>Rematch</button>\n            <button onClick={() => setShowCover(true)}>Back to Cover</button>\n          </div>\n        </>\n      ) : mode === 'solo' ? (\n        <>\n          <h1>Solo Chess</h1>\n          {soloStatus && <p style={{ color: '#FFD700', fontWeight: 'bold' }}>{soloStatus}</p>}\n          <ChessboardComponent\n            fen={soloFen}\n            moves={soloMoves}\n            onMove={handleSoloMove}\n            playerColor={soloTurn}\n            turn={soloTurn}\n            soloMode={true}\n            boardOrientation={soloBoardOrientation}\n          />\n          <div style={{ marginTop: 24 }}>\n            <h3 style={{ color: '#FFD700', marginBottom: 8 }}>Move History</h3>\n            <ol style={{ color: '#BCAAA4', background: '#222', borderRadius: 8, padding: 12, maxHeight: 200, overflowY: 'auto' }}>\n              {soloMoves.map((move, idx) => (\n                <li key={idx}>{move}</li>\n              ))}\n            </ol>\n          </div>\n          <div style={{ marginTop: 16, marginBottom: 8, display: 'flex', gap: 12 }}>\n            <button onClick={handleSoloRematch}>Rematch</button>\n            <button onClick={handleSoloReset}>Reset Solo Game</button>\n            <button onClick={() => setSoloBoardOrientation(o => o === 'white' ? 'black' : 'white')}>Flip Board</button>\n            <button onClick={() => setShowCover(true)}>Back to Cover</button>\n          </div>\n        </>\n      ) : (\n        <>\n          {error && <div style={{ color: 'red', fontWeight: 'bold', marginBottom: 16 }}>{error}</div>}\n          <h1>Multiplayer Chess</h1>\n          <p>Game ID: {gameId}</p>\n          <p>Players connected: {players}</p>\n          {playerColor && (\n            <p>Your color: <span style={{ color: playerColor === 'w' ? '#FFD700' : '#B22222', fontWeight: 'bold' }}>{playerColor === 'w' ? 'White' : 'Black'}</span></p>\n          )}\n          <p>Turn: <span style={{ color: turn === 'w' ? '#FFD700' : '#B22222', fontWeight: 'bold' }}>{turn === 'w' ? 'White' : 'Black'}</span></p>\n          {status && <p style={{ color: '#FFD700', fontWeight: 'bold' }}>{status}</p>}\n          <div style={{ display: 'flex', justifyContent: 'space-between', margin: '16px 0', background: '#181818', borderRadius: 8, padding: 12 }}>\n            <div>\n              <h3 style={{ color: '#FFD700', margin: 0, marginBottom: 8 }}>Players</h3>\n              {playerIDs.map((id, idx) => (\n                <div key={id} style={{ color: idx === 0 ? '#FFD700' : '#B22222', fontWeight: myID === id ? 'bold' : 'normal' }}>\n                  {myID === id ? 'You' : `Opponent`} ({idx === 0 ? 'White' : 'Black'})<br />\n                  <span style={{ fontSize: '1em', color: '#FFD700' }}>{playerNames[id] || id}</span>\n                  <br />\n                  <span style={{ fontSize: '0.85em', color: '#BCAAA4' }}>{id}</span>\n                </div>\n              ))}\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'flex-end' }}>\n              <div style={{ color: '#FFD700', fontWeight: 'bold', fontSize: '1.1em' }}>White: {formatTime(whiteTime)}</div>\n              <div style={{ color: '#B22222', fontWeight: 'bold', fontSize: '1.1em' }}>Black: {formatTime(blackTime)}</div>\n            </div>\n          </div>\n          <ChessboardComponent\n            fen={fen}\n            moves={moves}\n            onMove={(move) => sendMove(move)}\n            playerColor={playerColor}\n            turn={turn}\n          />\n          <div style={{ marginTop: 24 }}>\n            <h3 style={{ color: '#FFD700', marginBottom: 8 }}>Move History</h3>\n            <ol style={{ color: '#BCAAA4', background: '#222', borderRadius: 8, padding: 12, maxHeight: 200, overflowY: 'auto' }}>\n              {moves.map((move, idx) => (\n                <li key={idx}>{move}</li>\n              ))}\n            </ol>\n          </div>\n          <div style={{ marginTop: 16, marginBottom: 8 }}>\n            <button\n              onClick={handleRematch}\n              disabled={!status || (status !== 'Checkmate!' && status !== 'Stalemate!')}\n              style={{ opacity: (!status || (status !== 'Checkmate!' && status !== 'Stalemate!')) ? 0.5 : 1 }}\n            >\n              Rematch\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}