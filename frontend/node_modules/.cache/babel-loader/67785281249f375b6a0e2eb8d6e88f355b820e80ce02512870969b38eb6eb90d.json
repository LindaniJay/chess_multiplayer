{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessboardComponent = ({\n  fen,\n  moves,\n  onMove,\n  playerColor,\n  turn,\n  soloMode,\n  boardOrientation\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState(null);\n  const [boardWidth, setBoardWidth] = useState(Math.min(window.innerWidth * 0.9, 350));\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove = null;\n    moves.forEach(move => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({\n        from: lastMove.from,\n        to: lastMove.to\n      });\n    }\n  }, [moves]);\n  const handlePieceDrop = (sourceSquare, targetSquare) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) return false;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    });\n    if (move) {\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({\n        from: move.from,\n        to: move.to\n      });\n      return true;\n    }\n    return false;\n  };\n\n  // Custom board colors for masculine theme\n  const boardColors = {\n    light: '#BCAAA4',\n    // light brown\n    dark: '#3E2723' // dark brown\n  };\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares ? {\n    [lastMoveSquares.from]: {\n      background: '#FFD700',\n      boxShadow: '0 0 10px 2px #FFD700'\n    },\n    [lastMoveSquares.to]: {\n      background: '#B22222',\n      boxShadow: '0 0 10px 2px #B22222'\n    }\n  } : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [playerColor && playerColor !== turn && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#FFD700',\n        marginBottom: 8,\n        fontWeight: 'bold'\n      },\n      children: \"Waiting for opponent's move...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: handlePieceDrop,\n      boardWidth: boardWidth,\n      boardOrientation: boardOrientation || (playerColor === 'b' ? 'black' : 'white'),\n      customBoardStyle: {\n        borderRadius: '8px',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.6)'\n      },\n      customDarkSquareStyle: {\n        backgroundColor: boardColors.dark\n      },\n      customLightSquareStyle: {\n        backgroundColor: boardColors.light\n      },\n      customSquareStyles: customSquareStyles,\n      arePiecesDraggable: !!playerColor && playerColor === turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"k3gJp5cKuvqiNlyQUB2crRYNuo4=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","jsxDEV","_jsxDEV","ChessboardComponent","fen","moves","onMove","playerColor","turn","soloMode","boardOrientation","_s","game","setGame","lastMoveSquares","setLastMoveSquares","boardWidth","setBoardWidth","Math","min","window","innerWidth","handleResize","addEventListener","removeEventListener","newGame","load","lastMove","forEach","move","err","console","warn","from","to","handlePieceDrop","sourceSquare","targetSquare","promotion","san","boardColors","light","dark","customSquareStyles","background","boxShadow","className","children","style","color","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","customBoardStyle","borderRadius","customDarkSquareStyle","backgroundColor","customLightSquareStyle","arePiecesDraggable","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/Chessboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\n\ninterface Props {\n  fen: string | null;\n  moves: string[];\n  onMove: (move: string) => void;\n  playerColor: 'w' | 'b' | null;\n  turn: 'w' | 'b';\n  soloMode?: boolean;\n  boardOrientation?: 'white' | 'black';\n}\n\nconst ChessboardComponent: React.FC<Props> = ({ fen, moves, onMove, playerColor, turn, soloMode, boardOrientation }) => {\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState<{from: string, to: string} | null>(null);\n  const [boardWidth, setBoardWidth] = useState<number>(Math.min(window.innerWidth * 0.9, 350));\n\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove: any = null;\n    moves.forEach((move) => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({ from: lastMove.from, to: lastMove.to });\n    }\n  }, [moves]);\n\n  const handlePieceDrop = (sourceSquare: string, targetSquare: string) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) return false;\n    const move = game.move({ from: sourceSquare, to: targetSquare, promotion: 'q' });\n    if (move) {\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({ from: move.from, to: move.to });\n      return true;\n    }\n    return false;\n  };\n\n  // Custom board colors for masculine theme\n  const boardColors = {\n    light: '#BCAAA4', // light brown\n    dark: '#3E2723',  // dark brown\n  };\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares\n    ? {\n        [lastMoveSquares.from]: {\n          background: '#FFD700',\n          boxShadow: '0 0 10px 2px #FFD700',\n        },\n        [lastMoveSquares.to]: {\n          background: '#B22222',\n          boxShadow: '0 0 10px 2px #B22222',\n        },\n      }\n    : {};\n\n  return (\n    <div className=\"chessboard-container\">\n      {playerColor && playerColor !== turn && (\n        <div style={{ color: '#FFD700', marginBottom: 8, fontWeight: 'bold' }}>\n          Waiting for opponent's move...\n        </div>\n      )}\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={handlePieceDrop}\n        boardWidth={boardWidth}\n        boardOrientation={boardOrientation || (playerColor === 'b' ? 'black' : 'white')}\n        customBoardStyle={{\n          borderRadius: '8px',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.6)',\n        }}\n        customDarkSquareStyle={{ backgroundColor: boardColors.dark }}\n        customLightSquareStyle={{ backgroundColor: boardColors.light }}\n        customSquareStyles={customSquareStyles}\n        arePiecesDraggable={!!playerColor && playerColor === turn}\n      />\n    </div>\n  );\n};\n\nexport default ChessboardComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}