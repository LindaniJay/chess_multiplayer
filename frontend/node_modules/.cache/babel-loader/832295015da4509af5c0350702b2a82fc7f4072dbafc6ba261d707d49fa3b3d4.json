{"ast":null,"code":"import React,{useEffect,useState}from'react';import io from'socket.io-client';import Chessboard from'./Chessboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('http://localhost:4000');const App=()=>{const[gameId,setGameId]=useState('room1');const[connected,setConnected]=useState(false);const[players,setPlayers]=useState(0);const[fen,setFen]=useState('start');const[moves,setMoves]=useState([]);useEffect(()=>{socket.on('connect',()=>{setConnected(true);socket.emit('joinGame',gameId);});socket.on('joinedGame',_ref=>{let{fen,moves}=_ref;setFen(fen==='start'?null:fen);setMoves(moves);});socket.on('playerUpdate',count=>setPlayers(count));socket.on('moveMade',move=>{setMoves(prev=>[...prev,move]);});socket.on('fullGame',msg=>alert(msg));return()=>{socket.off('connect');socket.off('joinedGame');socket.off('playerUpdate');socket.off('moveMade');socket.off('fullGame');};},[gameId]);const sendMove=move=>{socket.emit('makeMove',{gameId,move});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Multiplayer Chess\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Game ID: \",gameId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Players connected: \",players]}),/*#__PURE__*/_jsx(Chessboard,{fen:fen,moves:moves,onMove:move=>sendMove(move)})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","io","Chessboard","jsx","_jsx","jsxs","_jsxs","socket","App","gameId","setGameId","connected","setConnected","players","setPlayers","fen","setFen","moves","setMoves","on","emit","_ref","count","move","prev","msg","alert","off","sendMove","className","children","onMove"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Chessboard from './Chessboard';\n\nconst socket = io('http://localhost:4000');\n\nconst App: React.FC = () => {\n  const [gameId, setGameId] = useState('room1');\n  const [connected, setConnected] = useState(false);\n  const [players, setPlayers] = useState(0);\n  const [fen, setFen] = useState('start');\n  const [moves, setMoves] = useState<string[]>([]);\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      setConnected(true);\n      socket.emit('joinGame', gameId);\n    });\n\n    socket.on('joinedGame', ({ fen, moves }) => {\n      setFen(fen === 'start' ? null : fen);\n      setMoves(moves);\n    });\n\n    socket.on('playerUpdate', (count) => setPlayers(count));\n\n    socket.on('moveMade', (move) => {\n      setMoves((prev) => [...prev, move]);\n    });\n\n    socket.on('fullGame', (msg) => alert(msg));\n\n    return () => {\n      socket.off('connect');\n      socket.off('joinedGame');\n      socket.off('playerUpdate');\n      socket.off('moveMade');\n      socket.off('fullGame');\n    };\n  }, [gameId]);\n\n  const sendMove = (move: string) => {\n    socket.emit('makeMove', { gameId, move });\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Multiplayer Chess</h1>\n      <p>Game ID: {gameId}</p>\n      <p>Players connected: {players}</p>\n      <Chessboard\n        fen={fen}\n        moves={moves}\n        onMove={(move) => sendMove(move)}\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAgB,OAAO,CAC1D,MAAO,CAAAC,EAAE,KAAM,kBAAkB,CACjC,MAAO,CAAAC,UAAU,KAAM,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,KAAM,CAAAC,MAAM,CAAGN,EAAE,CAAC,uBAAuB,CAAC,CAE1C,KAAM,CAAAO,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,OAAO,CAAC,CAC7C,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACe,GAAG,CAAEC,MAAM,CAAC,CAAGhB,QAAQ,CAAC,OAAO,CAAC,CACvC,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAW,EAAE,CAAC,CAEhDD,SAAS,CAAC,IAAM,CACdQ,MAAM,CAACY,EAAE,CAAC,SAAS,CAAE,IAAM,CACzBP,YAAY,CAAC,IAAI,CAAC,CAClBL,MAAM,CAACa,IAAI,CAAC,UAAU,CAAEX,MAAM,CAAC,CACjC,CAAC,CAAC,CAEFF,MAAM,CAACY,EAAE,CAAC,YAAY,CAAEE,IAAA,EAAoB,IAAnB,CAAEN,GAAG,CAAEE,KAAM,CAAC,CAAAI,IAAA,CACrCL,MAAM,CAACD,GAAG,GAAK,OAAO,CAAG,IAAI,CAAGA,GAAG,CAAC,CACpCG,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAC,CAAC,CAEFV,MAAM,CAACY,EAAE,CAAC,cAAc,CAAGG,KAAK,EAAKR,UAAU,CAACQ,KAAK,CAAC,CAAC,CAEvDf,MAAM,CAACY,EAAE,CAAC,UAAU,CAAGI,IAAI,EAAK,CAC9BL,QAAQ,CAAEM,IAAI,EAAK,CAAC,GAAGA,IAAI,CAAED,IAAI,CAAC,CAAC,CACrC,CAAC,CAAC,CAEFhB,MAAM,CAACY,EAAE,CAAC,UAAU,CAAGM,GAAG,EAAKC,KAAK,CAACD,GAAG,CAAC,CAAC,CAE1C,MAAO,IAAM,CACXlB,MAAM,CAACoB,GAAG,CAAC,SAAS,CAAC,CACrBpB,MAAM,CAACoB,GAAG,CAAC,YAAY,CAAC,CACxBpB,MAAM,CAACoB,GAAG,CAAC,cAAc,CAAC,CAC1BpB,MAAM,CAACoB,GAAG,CAAC,UAAU,CAAC,CACtBpB,MAAM,CAACoB,GAAG,CAAC,UAAU,CAAC,CACxB,CAAC,CACH,CAAC,CAAE,CAAClB,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAmB,QAAQ,CAAIL,IAAY,EAAK,CACjChB,MAAM,CAACa,IAAI,CAAC,UAAU,CAAE,CAAEX,MAAM,CAAEc,IAAK,CAAC,CAAC,CAC3C,CAAC,CAED,mBACEjB,KAAA,QAAKuB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B1B,IAAA,OAAA0B,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1BxB,KAAA,MAAAwB,QAAA,EAAG,WAAS,CAACrB,MAAM,EAAI,CAAC,cACxBH,KAAA,MAAAwB,QAAA,EAAG,qBAAmB,CAACjB,OAAO,EAAI,CAAC,cACnCT,IAAA,CAACF,UAAU,EACTa,GAAG,CAAEA,GAAI,CACTE,KAAK,CAAEA,KAAM,CACbc,MAAM,CAAGR,IAAI,EAAKK,QAAQ,CAACL,IAAI,CAAE,CAClC,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}