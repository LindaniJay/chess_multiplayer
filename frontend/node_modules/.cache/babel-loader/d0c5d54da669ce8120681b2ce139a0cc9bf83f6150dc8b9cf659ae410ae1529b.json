{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deviare User\\\\OneDrive\\\\Documents\\\\chess-multiplayer\\\\frontend\\\\src\\\\Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chess } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeColors = {\n  manly: {\n    light: '#BCAAA4',\n    dark: '#3E2723'\n  },\n  classic: {\n    light: '#f0d9b5',\n    dark: '#b58863'\n  },\n  blue: {\n    light: '#e0eaff',\n    dark: '#3a5ca8'\n  },\n  green: {\n    light: '#eaffea',\n    dark: '#3a8a3a'\n  },\n  wood: {\n    light: '#ecdab9',\n    dark: '#b88762'\n  }\n};\nconst ChessboardComponent = ({\n  fen,\n  moves,\n  onMove,\n  playerColor,\n  turn,\n  soloMode,\n  boardOrientation,\n  boardTheme = 'manly'\n}) => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState(null);\n  const [boardWidth, setBoardWidth] = useState(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [prevFen, setPrevFen] = useState('start');\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove = null;\n    moves.forEach(move => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({\n        from: lastMove.from,\n        to: lastMove.to\n      });\n    }\n  }, [moves]);\n  const handlePieceDrop = (sourceSquare, targetSquare) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) {\n      setMoveError(\"It's not your turn.\");\n      setGame(new Chess(prevFen));\n      return false;\n    }\n    const moveObj = {\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    };\n    const legalMoves = game.moves({\n      verbose: true\n    });\n    const isLegal = legalMoves.some(m => m.from === sourceSquare && m.to === targetSquare);\n    setPrevFen(game.fen());\n    let move = null;\n    try {\n      move = game.move(moveObj);\n    } catch (err) {\n      // Defensive: catch any chess.js error and show a user-friendly message\n      setMoveError('Invalid move: ' + ((err === null || err === void 0 ? void 0 : err.message) || 'Unknown error.'));\n      setGame(new Chess(prevFen));\n      return false;\n    }\n    if (move) {\n      setMoveError(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({\n        from: move.from,\n        to: move.to\n      });\n      return true;\n    } else {\n      // Advanced rule feedback\n      const fromPiece = game.get(sourceSquare);\n      if (!fromPiece) {\n        setMoveError('No piece on that square.');\n      } else if (fromPiece.color !== game.turn()) {\n        setMoveError(\"You can't move your opponent's piece.\");\n      } else if (!isLegal) {\n        // Check if the piece can move at all\n        const canMove = legalMoves.some(m => m.from === sourceSquare);\n        if (!canMove) {\n          setMoveError('This piece cannot move right now (it may be blocked or pinned).');\n        } else {\n          // Check if the path is blocked (for sliding pieces)\n          if (['b', 'r', 'q'].includes(fromPiece.type)) {\n            setMoveError('That move is blocked by another piece.');\n          } else {\n            setMoveError('That move is not legal for this piece.');\n          }\n        }\n      } else {\n        var _legalMoves$find;\n        const moveStr = ((_legalMoves$find = legalMoves.find(m => m.from === sourceSquare && m.to === targetSquare)) === null || _legalMoves$find === void 0 ? void 0 : _legalMoves$find.san) || '';\n        if (moveStr.includes('O-O')) {\n          setMoveError('You cannot castle through, into, or out of check.');\n        } else if (sourceSquare[1] === '7' && fromPiece && fromPiece.type === 'p' && targetSquare[1] === '8' && !moveObj.promotion) {\n          setMoveError('You must promote your pawn when it reaches the last rank.');\n        } else {\n          // Try the move on a clone and see if king is in check\n          const clone = new Chess(game.fen());\n          try {\n            const result = clone.move(moveObj);\n            if (result && clone.inCheck()) {\n              setMoveError('You cannot move this piece because it would leave your king in check (pinned piece or discovered check).');\n            } else {\n              setMoveError('Illegal move!');\n            }\n          } catch {\n            setMoveError('Illegal move!');\n          }\n        }\n      }\n      setGame(new Chess(prevFen));\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares ? {\n    [lastMoveSquares.from]: {\n      background: '#FFD700',\n      boxShadow: '0 0 10px 2px #FFD700'\n    },\n    [lastMoveSquares.to]: {\n      background: '#B22222',\n      boxShadow: '0 0 10px 2px #B22222'\n    }\n  } : {};\n\n  // Undo move handler for solo/AI mode\n  const handleUndo = () => {\n    if (!soloMode && !window.location.pathname.includes('ai')) return;\n    if (moves.length === 0) return;\n    const newMoves = moves.slice(0, -1);\n    const chess = new Chess();\n    newMoves.forEach(move => {\n      try {\n        chess.move(move);\n      } catch {}\n    });\n    setGame(chess);\n    setLastMoveSquares(null);\n    setMoveError(null);\n    if (typeof onMove === 'function') {\n      // For solo/AI, onMove should update the move list in parent\n      // We'll call onMove with a special value to indicate undo\n      // But for now, just update the board locally\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chessboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: handlePieceDrop,\n      boardWidth: boardWidth,\n      boardOrientation: boardOrientation || (playerColor === 'b' ? 'black' : 'white'),\n      customBoardStyle: {\n        borderRadius: '8px',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.6)'\n      },\n      customDarkSquareStyle: {\n        backgroundColor: boardColors.dark\n      },\n      customLightSquareStyle: {\n        backgroundColor: boardColors.light\n      },\n      customSquareStyles: customSquareStyles,\n      arePiecesDraggable: !!soloMode || !!playerColor && playerColor === turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '100%',\n        marginTop: 12\n      },\n      children: [moveError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          fontWeight: 'bold',\n          marginTop: 8\n        },\n        children: moveError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8,\n          marginLeft: 'auto'\n        },\n        children: [soloMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUndo,\n          disabled: moves.length === 0,\n          style: {\n            background: '#BCAAA4',\n            color: '#222',\n            fontWeight: 'bold',\n            border: '2px solid #B22222',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: moves.length === 0 ? 'not-allowed' : 'pointer'\n          },\n          children: \"Undo Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(true),\n          style: {\n            background: '#FFD700',\n            color: '#222',\n            fontWeight: 'bold',\n            border: '2px solid #B22222',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: 'pointer'\n          },\n          children: \"Help\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), showHelp && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        background: 'rgba(0,0,0,0.7)',\n        zIndex: 1000,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#222',\n          color: '#FFD700',\n          borderRadius: 12,\n          padding: 32,\n          maxWidth: 400,\n          textAlign: 'left',\n          boxShadow: '0 4px 24px #000'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Chess Move Rules & Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            color: '#FFD700',\n            fontSize: '1em',\n            paddingLeft: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Only move your own pieces on your turn.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Pawns move forward, capture diagonally, and promote on the last rank.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Knights jump in an L-shape. Bishops move diagonally. Rooks move straight. Queens move any direction. Kings move one square.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"You cannot move into or through check. Pinned pieces cannot move if it exposes your king.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Castling is only allowed if neither the king nor rook has moved, the squares between are empty, and the king does not move through or into check.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"En passant is a special pawn capture after a two-square pawn move.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If you try an illegal move, the board will reset and you'll see an explanation here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowHelp(false),\n          style: {\n            marginTop: 16,\n            background: '#FFD700',\n            color: '#222',\n            fontWeight: 'bold',\n            border: '2px solid #B22222',\n            borderRadius: 6,\n            padding: '6px 16px',\n            cursor: 'pointer'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessboardComponent, \"UFUinnJGD5rP8pZE62fhvLfelEk=\");\n_c = ChessboardComponent;\nexport default ChessboardComponent;\nvar _c;\n$RefreshReg$(_c, \"ChessboardComponent\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","jsxDEV","_jsxDEV","themeColors","manly","light","dark","classic","blue","green","wood","ChessboardComponent","fen","moves","onMove","playerColor","turn","soloMode","boardOrientation","boardTheme","_s","game","setGame","lastMoveSquares","setLastMoveSquares","boardWidth","setBoardWidth","Math","min","window","innerWidth","moveError","setMoveError","showHelp","setShowHelp","prevFen","setPrevFen","handleResize","addEventListener","removeEventListener","newGame","load","lastMove","forEach","move","err","console","warn","from","to","handlePieceDrop","sourceSquare","targetSquare","moveObj","promotion","legalMoves","verbose","isLegal","some","m","message","san","fromPiece","get","color","canMove","includes","type","_legalMoves$find","moveStr","find","clone","result","inCheck","boardColors","customSquareStyles","background","boxShadow","handleUndo","location","pathname","length","newMoves","slice","chess","className","children","position","onPieceDrop","customBoardStyle","borderRadius","customDarkSquareStyle","backgroundColor","customLightSquareStyle","arePiecesDraggable","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","width","marginTop","fontWeight","gap","marginLeft","onClick","disabled","border","padding","cursor","top","left","height","zIndex","maxWidth","textAlign","fontSize","paddingLeft","_c","$RefreshReg$"],"sources":["C:/Users/Deviare User/OneDrive/Documents/chess-multiplayer/frontend/src/Chessboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chess, Square } from 'chess.js';\nimport { Chessboard } from 'react-chessboard';\nimport './Chessboard.css';\n\ninterface Props {\n  fen: string | null;\n  moves: string[];\n  onMove: (move: string) => void;\n  playerColor: 'w' | 'b' | null;\n  turn: 'w' | 'b';\n  soloMode?: boolean;\n  boardOrientation?: 'white' | 'black';\n  boardTheme?: 'manly' | 'classic' | 'blue' | 'green' | 'wood';\n}\n\nconst themeColors = {\n  manly: { light: '#BCAAA4', dark: '#3E2723' },\n  classic: { light: '#f0d9b5', dark: '#b58863' },\n  blue: { light: '#e0eaff', dark: '#3a5ca8' },\n  green: { light: '#eaffea', dark: '#3a8a3a' },\n  wood: { light: '#ecdab9', dark: '#b88762' },\n};\n\nconst ChessboardComponent: React.FC<Props> = ({ fen, moves, onMove, playerColor, turn, soloMode, boardOrientation, boardTheme = 'manly' }) => {\n  const [game, setGame] = useState(new Chess());\n  const [lastMoveSquares, setLastMoveSquares] = useState<{from: string, to: string} | null>(null);\n  const [boardWidth, setBoardWidth] = useState<number>(Math.min(window.innerWidth * 0.9, 350));\n  const [moveError, setMoveError] = useState<string | null>(null);\n  const [showHelp, setShowHelp] = useState(false);\n  const [prevFen, setPrevFen] = useState<string>('start');\n\n  useEffect(() => {\n    const handleResize = () => {\n      setBoardWidth(Math.min(window.innerWidth * 0.9, 350));\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Initialize game from fen or reset\n  useEffect(() => {\n    const newGame = new Chess();\n    if (fen && fen !== 'start') {\n      newGame.load(fen);\n    }\n    setGame(newGame);\n  }, [fen]);\n\n  // Apply moves from server\n  useEffect(() => {\n    const newGame = new Chess(game.fen());\n    let lastMove: any = null;\n    moves.forEach((move) => {\n      try {\n        lastMove = newGame.move(move);\n      } catch (err) {\n        console.warn('Invalid move in history:', move, err);\n      }\n    });\n    setGame(newGame);\n    if (lastMove && lastMove.from && lastMove.to) {\n      setLastMoveSquares({ from: lastMove.from, to: lastMove.to });\n    }\n  }, [moves]);\n\n  const handlePieceDrop = (sourceSquare: string, targetSquare: string) => {\n    // In solo mode, allow both sides to move\n    if (!soloMode && (!playerColor || playerColor !== turn)) {\n      setMoveError(\"It's not your turn.\");\n      setGame(new Chess(prevFen));\n      return false;\n    }\n    const moveObj = { from: sourceSquare, to: targetSquare, promotion: 'q' };\n    const legalMoves = game.moves({ verbose: true });\n    const isLegal = legalMoves.some(m => m.from === sourceSquare && m.to === targetSquare);\n    setPrevFen(game.fen());\n    let move = null;\n    try {\n      move = game.move(moveObj);\n    } catch (err: any) {\n      // Defensive: catch any chess.js error and show a user-friendly message\n      setMoveError('Invalid move: ' + (err?.message || 'Unknown error.'));\n      setGame(new Chess(prevFen));\n      return false;\n    }\n    if (move) {\n      setMoveError(null);\n      onMove(move.san);\n      setGame(new Chess(game.fen()));\n      setLastMoveSquares({ from: move.from, to: move.to });\n      return true;\n    } else {\n      // Advanced rule feedback\n      const fromPiece = game.get(sourceSquare as Square);\n      if (!fromPiece) {\n        setMoveError('No piece on that square.');\n      } else if (fromPiece.color !== game.turn()) {\n        setMoveError(\"You can't move your opponent's piece.\");\n      } else if (!isLegal) {\n        // Check if the piece can move at all\n        const canMove = legalMoves.some(m => m.from === sourceSquare);\n        if (!canMove) {\n          setMoveError('This piece cannot move right now (it may be blocked or pinned).');\n        } else {\n          // Check if the path is blocked (for sliding pieces)\n          if (['b', 'r', 'q'].includes(fromPiece.type)) {\n            setMoveError('That move is blocked by another piece.');\n          } else {\n            setMoveError('That move is not legal for this piece.');\n          }\n        }\n      } else {\n        const moveStr = legalMoves.find(m => m.from === sourceSquare && m.to === targetSquare)?.san || '';\n        if (moveStr.includes('O-O')) {\n          setMoveError('You cannot castle through, into, or out of check.');\n        } else if (sourceSquare[1] === '7' && fromPiece && fromPiece.type === 'p' && targetSquare[1] === '8' && !moveObj.promotion) {\n          setMoveError('You must promote your pawn when it reaches the last rank.');\n        } else {\n          // Try the move on a clone and see if king is in check\n          const clone = new Chess(game.fen());\n          try {\n            const result = clone.move(moveObj);\n            if (result && clone.inCheck()) {\n              setMoveError('You cannot move this piece because it would leave your king in check (pinned piece or discovered check).');\n            } else {\n              setMoveError('Illegal move!');\n            }\n          } catch {\n            setMoveError('Illegal move!');\n          }\n        }\n      }\n      setGame(new Chess(prevFen));\n    }\n    return false;\n  };\n\n  // Custom board colors for theme\n  const boardColors = themeColors[boardTheme] || themeColors['manly'];\n\n  // Highlight last move\n  const customSquareStyles = lastMoveSquares\n    ? {\n        [lastMoveSquares.from]: {\n          background: '#FFD700',\n          boxShadow: '0 0 10px 2px #FFD700',\n        },\n        [lastMoveSquares.to]: {\n          background: '#B22222',\n          boxShadow: '0 0 10px 2px #B22222',\n        },\n      }\n    : {};\n\n  // Undo move handler for solo/AI mode\n  const handleUndo = () => {\n    if (!soloMode && !window.location.pathname.includes('ai')) return;\n    if (moves.length === 0) return;\n    const newMoves = moves.slice(0, -1);\n    const chess = new Chess();\n    newMoves.forEach((move) => {\n      try { chess.move(move); } catch {}\n    });\n    setGame(chess);\n    setLastMoveSquares(null);\n    setMoveError(null);\n    if (typeof onMove === 'function') {\n      // For solo/AI, onMove should update the move list in parent\n      // We'll call onMove with a special value to indicate undo\n      // But for now, just update the board locally\n    }\n  };\n\n  return (\n    <div className=\"chessboard-container\">\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={handlePieceDrop}\n        boardWidth={boardWidth}\n        boardOrientation={boardOrientation || (playerColor === 'b' ? 'black' : 'white')}\n        customBoardStyle={{\n          borderRadius: '8px',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.6)',\n        }}\n        customDarkSquareStyle={{ backgroundColor: boardColors.dark }}\n        customLightSquareStyle={{ backgroundColor: boardColors.light }}\n        customSquareStyles={customSquareStyles}\n        arePiecesDraggable={!!soloMode || (!!playerColor && playerColor === turn)}\n      />\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%', marginTop: 12 }}>\n        {moveError && <div style={{ color: 'red', fontWeight: 'bold', marginTop: 8 }}>{moveError}</div>}\n        <div style={{ display: 'flex', gap: 8, marginLeft: 'auto' }}>\n          {soloMode && (\n            <button onClick={handleUndo} disabled={moves.length === 0} style={{ background: '#BCAAA4', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: moves.length === 0 ? 'not-allowed' : 'pointer' }}>Undo Move</button>\n          )}\n          <button onClick={() => setShowHelp(true)} style={{ background: '#FFD700', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Help</button>\n        </div>\n      </div>\n      {showHelp && (\n        <div style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh', background: 'rgba(0,0,0,0.7)', zIndex: 1000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <div style={{ background: '#222', color: '#FFD700', borderRadius: 12, padding: 32, maxWidth: 400, textAlign: 'left', boxShadow: '0 4px 24px #000' }}>\n            <h2 style={{ marginTop: 0 }}>Chess Move Rules & Tips</h2>\n            <ul style={{ color: '#FFD700', fontSize: '1em', paddingLeft: 20 }}>\n              <li>Only move your own pieces on your turn.</li>\n              <li>Pawns move forward, capture diagonally, and promote on the last rank.</li>\n              <li>Knights jump in an L-shape. Bishops move diagonally. Rooks move straight. Queens move any direction. Kings move one square.</li>\n              <li>You cannot move into or through check. Pinned pieces cannot move if it exposes your king.</li>\n              <li>Castling is only allowed if neither the king nor rook has moved, the squares between are empty, and the king does not move through or into check.</li>\n              <li>En passant is a special pawn capture after a two-square pawn move.</li>\n              <li>If you try an illegal move, the board will reset and you'll see an explanation here.</li>\n            </ul>\n            <button onClick={() => setShowHelp(false)} style={{ marginTop: 16, background: '#FFD700', color: '#222', fontWeight: 'bold', border: '2px solid #B22222', borderRadius: 6, padding: '6px 16px', cursor: 'pointer' }}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChessboardComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}